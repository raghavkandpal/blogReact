{"ast":null,"code":"var _jsxFileName = \"D:\\\\try\\\\blogReact\\\\app\\\\javascript\\\\components\\\\NewPost.jsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PostForm from './PostForm';\n\nvar NewPost = /*#__PURE__*/function (_React$Component) {\n  _inherits(NewPost, _React$Component);\n\n  var _super = _createSuper(NewPost);\n\n  function NewPost(props) {\n    var _this;\n\n    _classCallCheck(this, NewPost);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      title: \"\",\n      body: \"\"\n    };\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_this));\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_this));\n    _this.stripHtmlEntities = _this.stripHtmlEntities.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(NewPost, [{\n    key: \"stripHtmlEntities\",\n    value: function stripHtmlEntities(str) {\n      return String(str).replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(event) {\n      this.setState(_defineProperty({}, event.target.name, event.target.value));\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(event) {\n      var _this2 = this;\n\n      event.preventDefault();\n      var url = \"/api/v1/posts\";\n      var _this$state = this.state,\n          title = _this$state.title,\n          body = _this$state.body;\n      if (title.length === 0 || body.length === 0) return;\n      var data = {\n        title: title,\n        body: body\n      };\n      var token = document.querySelector('meta[name=\"csrf-token\"]').content;\n      fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"X-CSRF-Token\": token,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      }).then(function (response) {\n        if (response.ok) {\n          return response.json();\n        }\n\n        throw new Error(\"Response was not ok.\");\n      }).then(function (response) {\n        return _this2.props.history.push(\"/post/\".concat(response.id));\n      })[\"catch\"](function (error) {\n        return console.log(error.message);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(PostForm, {\n        onSubmit: this.onSubmit,\n        onChange: this.onChange,\n        post: this.state,\n        button_label: \"Save Post\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return NewPost;\n}(React.Component);\n\nexport default NewPost;","map":{"version":3,"sources":["D:/try/blogReact/app/javascript/components/NewPost.jsx"],"names":["React","Link","PostForm","NewPost","props","state","title","body","onChange","bind","onSubmit","stripHtmlEntities","str","String","replace","event","setState","target","name","value","preventDefault","url","length","data","token","document","querySelector","content","fetch","method","headers","JSON","stringify","then","response","ok","json","Error","history","push","id","error","console","log","message","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;;IAEMC,O;;;;;AACJ,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,IAAI,EAAE;AAFK,KAAb;AAKA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcC,IAAd,+BAAhB;AACA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcD,IAAd,+BAAhB;AACA,UAAKE,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBF,IAAvB,+BAAzB;AATiB;AAUlB;;;;sCAEiBG,G,EAAK;AACrB,aAAOC,MAAM,CAACD,GAAD,CAAN,CACJE,OADI,CACI,IADJ,EACU,MADV,EAEJA,OAFI,CAEI,IAFJ,EAEU,MAFV,CAAP;AAGD;;;6BAEQC,K,EAAO;AACd,WAAKC,QAAL,qBAAiBD,KAAK,CAACE,MAAN,CAAaC,IAA9B,EAAqCH,KAAK,CAACE,MAAN,CAAaE,KAAlD;AACD;;;6BAEQJ,K,EAAO;AAAA;;AACdA,MAAAA,KAAK,CAACK,cAAN;AACA,UAAMC,GAAG,GAAG,eAAZ;AAFc,wBAGU,KAAKhB,KAHf;AAAA,UAGNC,KAHM,eAGNA,KAHM;AAAA,UAGCC,IAHD,eAGCA,IAHD;AAKd,UAAID,KAAK,CAACgB,MAAN,KAAgB,CAAhB,IAAqBf,IAAI,CAACe,MAAL,KAAe,CAAxC,EACI;AAEJ,UAAMC,IAAI,GAAG;AACXjB,QAAAA,KAAK,EAALA,KADW;AAEXC,QAAAA,IAAI,EAAJA;AAFW,OAAb;AAKA,UAAMiB,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,yBAAvB,EAAkDC,OAAhE;AACAC,MAAAA,KAAK,CAACP,GAAD,EAAM;AACTQ,QAAAA,MAAM,EAAE,MADC;AAETC,QAAAA,OAAO,EAAE;AACP,0BAAgBN,KADT;AAEP,0BAAgB;AAFT,SAFA;AAMTjB,QAAAA,IAAI,EAAEwB,IAAI,CAACC,SAAL,CAAeT,IAAf;AANG,OAAN,CAAL,CAQGU,IARH,CAQQ,UAAAC,QAAQ,EAAI;AAChB,YAAIA,QAAQ,CAACC,EAAb,EAAiB;AACf,iBAAOD,QAAQ,CAACE,IAAT,EAAP;AACD;;AACD,cAAM,IAAIC,KAAJ,CAAU,sBAAV,CAAN;AACD,OAbH,EAcGJ,IAdH,CAcQ,UAAAC,QAAQ;AAAA,eAAI,MAAI,CAAC9B,KAAL,CAAWkC,OAAX,CAAmBC,IAAnB,iBAAiCL,QAAQ,CAACM,EAA1C,EAAJ;AAAA,OAdhB,WAeS,UAAAC,KAAK;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB,CAAJ;AAAA,OAfd;AAgBD;;;6BAEQ;AACP,0BACE,oBAAC,QAAD;AAAU,QAAA,QAAQ,EAAE,KAAKlC,QAAzB;AAAmC,QAAA,QAAQ,EAAE,KAAKF,QAAlD;AAA4D,QAAA,IAAI,EAAE,KAAKH,KAAvE;AAA8E,QAAA,YAAY,EAAC,WAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAEE;;;;EA1DgBL,KAAK,CAAC6C,S;;AA6D5B,eAAe1C,OAAf","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PostForm from './PostForm'\r\n\r\nclass NewPost extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: \"\",\r\n      body: \"\"\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.stripHtmlEntities = this.stripHtmlEntities.bind(this);\r\n  }\r\n\r\n  stripHtmlEntities(str) {\r\n    return String(str)\r\n      .replace(/</g, \"&lt;\")\r\n      .replace(/>/g, \"&gt;\");\r\n  }\r\n\r\n  onChange(event) {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  }\r\n\r\n  onSubmit(event) {\r\n    event.preventDefault();\r\n    const url = \"/api/v1/posts\";\r\n    const { title, body } = this.state;\r\n\r\n    if (title.length ===0 || body.length ===0)\r\n        return;\r\n\r\n    const data = {\r\n      title,\r\n      body\r\n    };\r\n\r\n    const token = document.querySelector('meta[name=\"csrf-token\"]').content;\r\n    fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"X-CSRF-Token\": token,\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(data)\r\n    })\r\n      .then(response => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        }\r\n        throw new Error(\"Response was not ok.\");\r\n      })\r\n      .then(response => this.props.history.push(`/post/${response.id}`))\r\n      .catch(error => console.log(error.message));\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <PostForm onSubmit={this.onSubmit} onChange={this.onChange} post={this.state} button_label=\"Save Post\" />\r\n    )}\r\n}\r\n\r\nexport default NewPost;"]},"metadata":{},"sourceType":"module"}